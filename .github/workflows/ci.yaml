---
name: "ci"
on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '*'
  pull_request:
env:
  GO: 1.20.x
jobs:
  test-os:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO }}
    - run: make test
  test-ubuntu:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO }}
    - run: make lcov
    - name: Send coverage
      uses: coverallsapp/github-action@v2
      with:
        file: coverage.lcov
  test-docker:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - id: buildx
      uses: docker/setup-buildx-action@v2
    - run: make docker-test
  test-version:
    if: (github.event_name == 'pull_request') || (github.ref == 'refs/heads/main')
    runs-on: ubuntu-latest
    outputs:
      status: ${{ steps.clq-extract.outputs.status }}
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO }}
    - name: Release validation of the CHANGELOG.md
      id: clq-extract
      run: |
        make build
        release_version=$(dist/clq -changeMap .github/clq/changemap.json -release -query 'releases[0].version' CHANGELOG.md)
        release_status=$(dist/clq -changeMap .github/clq/changemap.json -release -query 'releases[0].status' CHANGELOG.md)
        {
          echo "status=${release_status}"
          echo "tag=v${release_version}"
        } >> "${GITHUB_OUTPUT}"
    - uses: denisa/semantic-tag-helper@v1
      with:
        mode: test
        tag: ${{ steps.clq-extract.outputs.tag }}
  test:
    needs: [test-os, test-ubuntu, test-docker, test-version]
    runs-on: ubuntu-latest
    outputs:
      releasable: ${{ steps.is.outputs.releasable }}
    steps:
    - name: Can this be published?
      id: is
      run: |
        releasable=no
        if [ "${{ github.ref }}" == 'refs/heads/main' ]; then
          if [ "${{ needs.test-version.outputs.status }}" == 'released' ]; then
            releasable=yes
          fi
        elif [ "${{ needs.test-version.outputs.status }}" == 'prereleased' ]; then
            releasable=yes
        fi
        echo "releasable=${releasable}" >> "${GITHUB_OUTPUT}"
  release:
    if: needs.test.outputs.releasable == 'yes'
    needs: test
    runs-on: ubuntu-latest
    environment:
      name: dockerhub
      url: https://hub.docker.com/repository/docker/denisa/clq
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO }}
    - uses: docker/setup-qemu-action@v2
    - uses: docker/setup-buildx-action@v2
      id: buildx
    - uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    - run: make build
    - name: Extract release information
      id: clq-extract
      run: |
        release_version=$(dist/clq -changeMap .github/clq/changemap.json -release -query 'releases[0].version' CHANGELOG.md)

        release_name=$(dist/clq -changeMap .github/clq/changemap.json -release -query 'releases[0].label' CHANGELOG.md)
        if [ -z "${release_name}" ]; then
          release_name="Release ${release_version}"
        fi

        release_status=$(dist/clq -changeMap .github/clq/changemap.json -release -query 'releases[0].status' CHANGELOG.md)

        release_changes=$(dist/clq -changeMap .github/clq/changemap.json -release -output md -query 'releases[0].changes[]/' CHANGELOG.md)

        EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
        {
        echo "changes<<$EOF"
        echo "${release_changes}"
        echo "$EOF"
        echo "name=${release_name}"
        echo "status=${release_status}"
        echo "tag=v${release_version}"
        echo "version=${release_version}"
        } >> "${GITHUB_OUTPUT}"
    - run: |
        release_version=${{ steps.clq-extract.outputs.version }}
        VERSION=$release_version make clean assertVersionDefined build-all
        test "$(dist/clq-linux-amd64 -changeMap .github/clq/changemap.json -version)" = "clq $release_version"
        VERSION=${release_version} make assertVersionDefined docker-test
    - uses: docker/build-push-action@v4
      with:
        builder: ${{ steps.buildx.outputs.name }}
        build-args: |
          DOCKER_TAG=${{ steps.clq-extract.outputs.version }}
        context: .
        file: build/docker/alpine/Dockerfile
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          denisa/clq:${{ steps.clq-extract.outputs.version }}-alpine
    - uses: docker/build-push-action@v4
      with:
        builder: ${{ steps.buildx.outputs.name }}
        build-args: |
          DOCKER_TAG=${{ steps.clq-extract.outputs.version }}
        context: .
        file: build/docker/slim/Dockerfile
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          denisa/clq:${{ steps.clq-extract.outputs.version }}
          denisa/clq:${{ steps.clq-extract.outputs.version }}-slim
          denisa/clq:latest
    - uses: denisa/semantic-tag-helper@v1
      with:
        mode: set
        tag: ${{ steps.clq-extract.outputs.tag }}
    - uses: ncipollo/release-action@v1
      id: create_release
      with:
        tag: ${{ steps.clq-extract.outputs.tag }}
        prerelease: ${{ steps.clq-extract.outputs.status == 'prereleased' }}
        name: ${{ steps.clq-extract.outputs.name }}
        body: ${{ steps.clq-extract.outputs.changes }}
        artifactContentType: application/octet-stream
        artifacts: "dist/*"
